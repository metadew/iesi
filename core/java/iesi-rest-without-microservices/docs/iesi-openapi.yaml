openapi: 3.0.1

info:
  title: IESI API
  license:
    name: MIT
    url: 'https://github.com/metadew/iesi-doc/blob/master/LICENSE'
  version: 0.6.0

servers:
  - url: 'http://localhost:8080/api'
    description: Generated server url

tags:
  - name: scripts
    description: Everything about scripts
  - name: impersonations
    description: Everything about impersonations
  - name: execution requests
    description: Everything about execution requests
  - name: environments
    description: Everything about environments
  - name: connections
    description: Everything about connections
  - name: components
    description: Everything about components
  - name: action-types
    description: Everything about action types
  - name: connection-types
    description: Everything about connection types
  - name: users
    description: Everything about users

paths:
  '/users/login':
    post:
      tags:
        - users
      operationId: post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginDto'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserAuthenticationDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response


  '/script-executions':
    get:
      tags:
        - script-executions
      operationId: getAllScriptExecutions
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HalMultipleEmbeddedResourceScriptExecutionDto'

  '/script-executions/{runID}':
    get:
      tags:
        - script-executions
      operationId: getScriptExecutionsByRunId
      parameters:
        - in: path
          name: runID
          required: true
          schema:
            type: number
            default: 1
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HalMultipleEmbeddedResourceScriptExecutionDto'

  '/script-executions/{runID}/{processId}':
    get:
      tags:
        - script-executions
      operationId: getScriptExecutionsByRunIdAndProcessId
      parameters:
        - in: path
          name: runID
          required: true
          schema:
            type: number
        - in: path
          name: processId
          required: true
          schema:
            type: number
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ScriptExecutionDto'

  '/script-results':
    get:
      tags:
        - script-results
      operationId: getAllScriptResults
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelScriptResultDto'

  '/script-results/{runId}':
    get:
      tags:
        - script-results
      operationId: getScriptResultsById
      parameters:
        - name: runId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelScriptResultDto'

  '/script-results/{runId}/{processId}':
    get:
      tags:
        - script-results
      operationId: getScriptResultsByIdAndProcessId
      parameters:
        - name: runId
          in: path
          required: true
          schema:
            type: string
        - name: processId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ScriptResultDto'

  '/action-types':
    get:
      tags:
        - action-types
      operationId: getAllActionTypes
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HalMultipleEmbeddedResourceActionTypeDto'

  '/action-types/{name}':
    get:
      tags:
        - action-types
      operationId: getActionType
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActionTypeDto'
        '404':
          description: default response

  '/connection-types':
    get:
      tags:
        - connection-types
      operationId: getAllConnectionTypes
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HalMultipleEmbeddedResourceConnectionTypeDto'

  '/connection-types/{name}':
    get:
      tags:
        - connection-types
      operationId: getConnectionType
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConnectionTypeDto'
        '404':
          description: default response

  '/components/{name}/{version}':
    get:
      tags:
        - components
      operationId: get_1
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ComponentDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    put:
      tags:
        - components
      operationId: put
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentDto'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ComponentDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    delete:
      tags:
        - components
      operationId: delete
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response

  '/components':
    get:
      tags:
        - components
      operationId: getAll
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HalMultipleEmbeddedResourceComponentGlobalDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    put:
      tags:
        - components
      operationId: putAll
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ComponentDto'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HalMultipleEmbeddedResourceComponentDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    post:
      tags:
        - components
      operationId: test
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentDto'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ComponentDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    delete:
      tags:
        - components
      operationId: deleteAll
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response

  '/components/{name}':
    get:
      tags:
        - components
      operationId: getByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ComponentByNameDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    delete:
      tags:
        - components
      operationId: deleteByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response

  '/connections/{name}/{environment}':
    get:
      tags:
        - connections
      operationId: get_2
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: environment
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConnectionDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    put:
      tags:
        - connections
      operationId: put_1
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: environment
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionDto'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConnectionDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    delete:
      tags:
        - connections
      operationId: delete_1
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: environment
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response

  '/connections':
    get:
      tags:
        - connections
      operationId: getAll_1
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HalMultipleEmbeddedResourceConnectionGlobalDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    put:
      tags:
        - connections
      operationId: putAll_1
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ConnectionDto'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HalMultipleEmbeddedResourceConnectionDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    post:
      tags:
        - connections
      operationId: post_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionDto'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConnectionDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    delete:
      tags:
        - connections
      operationId: deleteAll_1
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response

  '/connections/{name}':
    get:
      tags:
        - connections
      operationId: getByName_1
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConnectionByNameDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    delete:
      tags:
        - connections
      operationId: deleteByName_1
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response

  '/environments':
    get:
      tags:
        - environments
      operationId: getAll_2
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HalMultipleEmbeddedResourceEnvironmentDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    put:
      tags:
        - environments
      operationId: putAll_2
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EnvironmentDto'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HalMultipleEmbeddedResourceEnvironmentDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    post:
      tags:
        - environments
      operationId: post_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentDto'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvironmentDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    delete:
      tags:
        - environments
      operationId: deleteAll_2
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response

  '/environments/{name}':
    get:
      tags:
        - environments
      operationId: getByName_2
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvironmentDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    put:
      tags:
        - environments
      operationId: put_2
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentDto'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnvironmentDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    delete:
      tags:
        - environments
      operationId: delete_2
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response

  '/environments/{name}/connections':
    get:
      tags:
        - environments
      operationId: getConnections
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HalMultipleEmbeddedResource'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
  '/execution-requests/{id}':
    get:
      tags:
        - execution requests
      operationId: getById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExecutionRequestDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    put:
      tags:
        - execution requests
      operationId: put_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutionRequestDto'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExecutionRequestDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    delete:
      tags:
        - execution requests
      operationId: deleteByName_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
  '/execution-requests':
    get:
      tags:
        - execution requests
      parameters:
        - in: query
          name: script
          required: false
          schema:
            type: string
          description: only execution requests with a script execution request for a script with the provided script name will be retrieved
        - in: query
          name: version
          required: false
          schema:
            type: string
          description: only execution requests with a script execution request for a script with the provided version will be retrieved
        - in: query
          name: environment
          required: false
          schema:
            type: string
          description: only execution requests with a script execution request for a script with the provided environment will be retrieved
        - in: query
          name: label
          required: false
          schema:
            type: string
          description: "allow for filtering based on execution request label. Format: `label_key:label_value`. Only execution request having a label with name `label_name` having a value containing `label_value` will be retrieved"
        - in: query
          name: page
          required: false
          schema:
            type: number
            default: 1
          description: detemines the page being returned
        - in: query
          name: size
          required: false
          schema:
            type: number
            default: 20
          description: detemines how many scripts are included in a page
        - in: query
          name: sort
          required: false
          schema:
            type: array
            items:
              type: string
              items:
                enum: [name]
          explode: false
          description: >
            See https://stackoverflow.com/questions/33018127/spring-data-rest-sort-by-multiple-properties for query parameter formatting. Sort the result set according to the provided keywords. The order of sorting follows the order of the list. By default sorting is applied in the ascending direction but this can be altered by explicitly providing the sorting direction:
             * `script[,desc|,asc]` - Sort by script name of script execution request.
             * `version[,desc|,asc]` - Sort by script version of script execution request.
             * `request_timestamp[,desc|,asc]` - Sort by execution request timestamp.
      operationId: getAll_3
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelExecutionRequestDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    put:
      tags:
        - execution requests
      operationId: putAll_3
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ExecutionRequestDto'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HalMultipleEmbeddedResourceExecutionRequestDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    post:
      tags:
        - execution requests
      operationId: post_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutionRequestPostDto'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExecutionRequestDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response

  '/impersonations':
    get:
      tags:
        - impersonations
      operationId: getAll_4
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HalMultipleEmbeddedResourceImpersonationDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    put:
      tags:
        - impersonations
      operationId: putAll_4
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ImpersonationDto'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HalMultipleEmbeddedResourceImpersonationDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    post:
      tags:
        - impersonations
      operationId: post_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImpersonationDto'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ImpersonationDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    delete:
      tags:
        - impersonations
      operationId: deleteAll_3
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response

  '/impersonations/{name}':
    get:
      tags:
        - impersonations
      operationId: get_3
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ImpersonationDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    put:
      tags:
        - impersonations
      operationId: put_4
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImpersonationDto'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ImpersonationDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    delete:
      tags:
        - impersonations
      operationId: delete_3
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response

  '/scripts/{name}/{version}':
    get:
      tags:
        - scripts
      operationId: get_4
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ScriptGetDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    put:
      tags:
        - scripts
      operationId: put_5
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptCreationDto'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ScriptCreationDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    delete:
      tags:
        - scripts
      operationId: delete_4
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: default response
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
  '/scripts/{name}/{version}/download':
    get:
      tags:
        - scripts
      operationId: get_file
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: JSON file got has response
          content:
            'OCTET_STREAM':
              schema:
                $ref: '#/components/schemas/ScriptGetDto'
        '404':
          description: default response
  /scripts:
    get:
      tags:
        - scripts
      parameters:
        - in: query
          name: version
          required: false
          schema:
            type: string
            enum:
              - latest
          description: allow for selection of only the latest version of all scripts when given the value 'latest'
        - in: query
          name: name
          required: false
          schema:
            type: string
          description: allow for filtering based on script name. Only scripts containing the provided value in its script name will be returned
        - in: query
          name: label
          required: false
          schema:
            type: string
          description: "allow for filtering based on script label. Format: `label_key:label_value`. Only scripts having a label with name `label_name` having a value containing `label_value`"
        - in: query
          name: page
          required: false
          schema:
            type: number
            default: 1
          description: detemines the page being returned
        - in: query
          name: size
          required: false
          schema:
            type: number
            default: 20
          description: detemines how many scripts are included in a page
        - in: query
          name: sort
          required: false
          schema:
            type: array
            items:
              type: string
              items:
                enum: [name]
          explode: false
          description: >
            See https://stackoverflow.com/questions/33018127/spring-data-rest-sort-by-multiple-properties for query parameter formatting. Sort the result set according to the provided keywords. The order of sorting follows the order of the list. By default sorting is applied in the ascending direction but this can be altered by explicitly providing the sorting direction:
             * `name[,desc|,asc]` - Sort by script name.
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelScriptDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    put:
      tags:
        - scripts
      operationId: putAll_5
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ScriptCreationDto'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HalMultipleEmbeddedResourceScriptCreationDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    post:
      tags:
        - scripts
      operationId: post_5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptCreationDto'
        required: true
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ScriptCreationDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
  '/scripts/{name}':
    get:
      tags:
        - scripts
      operationId: getByName_3
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: query
          name: version
          required: false
          schema:
            type: string
            enum:
              - latest
          description: allow for selection of only the latest version of all scripts when given the value 'latest'
        - in: query
          name: name
          required: false
          schema:
            type: string
          description: allow for filtering based on script name. Only scripts containing the provided value in its script name will be returned
        - in: query
          name: page
          required: false
          schema:
            type: number
            default: 1
          description: detemines the page being returned
        - in: query
          name: size
          required: false
          schema:
            type: number
            default: 20
          description: detemines how many scripts are included in a page
      responses:
        '200':
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelScriptDto'
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response
    delete:
      tags:
        - scripts
      operationId: deleteByName_3
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: default response
        '400':
          description: default response
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: default response

components:
  parameters:
    paginationPageParameter:
      in: query
      name: page
      required: false
      schema:
        type: integer
        minimum: 0
      description: The page number of items in the result set.
    paginationSizeParameter:
      in: query
      name: size
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 20
      description: The numbers of items to return.

  schemas:

    ComponentAttributeDto:
      type: object
      properties:
        environment:
          type: string
        name:
          type: string
        value:
          type: string
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ComponentDto:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        description:
          type: string
        version:
          $ref: '#/components/schemas/ComponentVersionDto'
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ComponentParameterDto'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ComponentAttributeDto'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ComponentParameterDto:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ComponentVersionDto:
      type: object
      properties:
        number:
          type: integer
          format: int64
        description:
          type: string
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    Link:
      type: object
      properties:
        href:
          type: string

    HalMultipleEmbeddedResourceComponentDto:
      type: object
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/ComponentDto'

    ComponentByNameDto:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        description:
          type: string
        versions:
          type: array
          items:
            type: integer
            format: int64
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ComponentGlobalDto:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        description:
          type: string
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ActionTypeDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        status:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ActionTypeParameterDto'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ActionTypeParameterDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        mandatory:
          type: boolean
        encrypted:
          type: boolean
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ConnectionTypeDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        status:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionTypeParameterDto'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ConnectionTypeParameterDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        mandatory:
          type: boolean
        encrypted:
          type: boolean
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    HalMultipleEmbeddedResourceComponentGlobalDto:
      type: object
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/ComponentGlobalDto'

    HalMultipleEmbeddedResourceActionTypeDto:
      type: object
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/ActionTypeDto'

    HalMultipleEmbeddedResourceConnectionTypeDto:
      type: object
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionTypeDto'

    ConnectionDto:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        description:
          type: string
        environment:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionParameterDto'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ConnectionParameterDto:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    HalMultipleEmbeddedResourceConnectionDto:
      type: object
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionDto'

    ConnectionByNameDto:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        description:
          type: string
        environments:
          type: array
          items:
            type: string
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ConnectionGlobalDto:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        description:
          type: string
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    HalMultipleEmbeddedResourceConnectionGlobalDto:
      type: object
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionGlobalDto'

    EnvironmentDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentParameterDto'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    EnvironmentParameterDto:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    HalMultipleEmbeddedResourceEnvironmentDto:
      type: object
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentDto'

    HalMultipleEmbeddedResource:
      type: object
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/RepresentationModel'

    RepresentationModel:
      type: object
      properties:
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ExecutionRequestDto:
      type: object
      properties:
        executionRequestId:
          type: string
        requestTimestamp:
          type: string
          format: date-time
        name:
          type: string
        description:
          type: string
        scope:
          type: string
        context:
          type: string
        email:
          type: string
        executionRequestStatus:
          type: string
          enum:
            - NEW
            - SUBMITTED
            - ACCEPTED
            - DECLINED
            - STOPPED
            - COMPLETED
            - KILLED
            - UNKNOWN
        scriptExecutionRequests:
          type: array
          items:
            $ref: '#/components/schemas/ScriptExecutionRequestDto'
        executionRequestLabels:
          type: array
          items:
            $ref: '#/components/schemas/ExecutionRequestLabelDto'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ExecutionRequestPostDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        scope:
          type: string
        context:
          type: string
        email:
          type: string
        scriptExecutionRequests:
          type: array
          items:
            $ref: '#/components/schemas/ScriptExecutionRequestPostDto'
        executionRequestLabels:
          type: array
          items:
            $ref: '#/components/schemas/ExecutionRequestLabelDto'


    ExecutionRequestLabelDto:
      type: object
      properties:
        name:
          type: string
        value:
          type: string

    ScriptExecutionRequestDto:
      type: object
      properties:
        scriptExecutionRequestId:
          type: string
        executionRequestId:
          type: string
        environment:
          type: string
        exit:
          type: boolean
        impersonations:
          type: array
          items:
            $ref: '#/components/schemas/ScriptExecutionRequestImpersonationDto'
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/NameValue'
        scriptExecutionRequestStatus:
          type: string
          enum:
            - NEW
            - SUBMITTED
            - ACCEPTED
            - DECLINED
            - COMPLETED
            - ABORTED
        scriptName:
          type: string
        scriptVersion:
          type: integer
          format: int64
        runId:
          type: string
        scriptRunStatus:
          type: string
          enum:
            - RUNNING
            - SUCCESS
            - WARNING
            - ERROR
            - STOPPED
            - SKIPPED
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    ScriptExecutionRequestPostDto:
      type: object
      properties:
        environment:
          type: string
        exit:
          type: boolean
        impersonations:
          type: array
          items:
            $ref: '#/components/schemas/ScriptExecutionRequestImpersonationDto'
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/NameValue'
        scriptName:
          type: string
        scriptVersion:
          type: integer
          format: int64

    ScriptExecutionRequestImpersonationDto:
      type: object
      properties:
        name:
          type: string

    HalMultipleEmbeddedResourceExecutionRequestDto:
      type: object
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/ExecutionRequestDto'

    HalMultipleEmbeddedResourceScriptExecutionDto:
      type: object
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/ScriptExecutionDto'

    ImpersonationDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ImpersonationParameterDto'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ImpersonationParameterDto:
      type: object
      properties:
        connection:
          type: string
        impersonation:
          type: string
        description:
          type: string
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    HalMultipleEmbeddedResourceImpersonationDto:
      type: object
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/ImpersonationDto'

    ActionDto:
      type: object
      properties:
        number:
          type: integer
          format: int64
        name:
          type: string
        type:
          type: string
        description:
          type: string
        component:
          type: string
        condition:
          type: string
        iteration:
          type: string
        errorExpected:
          type: boolean
        errorStop:
          type: boolean
        retries:
          type: integer
          format: int32
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ActionParameterDto'

    ActionParameterDto:
      type: object
      properties:
        name:
          type: string
        value:
          type: string

    ScriptDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        version:
          $ref: '#/components/schemas/ScriptVersionDto'
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ScriptParameterDto'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/ActionDto'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/ScriptLabelDto'
        execution:
          type: object
          properties:
            total:
              type: number
            mostRecent:
              type: array
              items:
                type: object
                properties:
                  startTimestamp:
                    type: string
                  endTimestamp:
                    type: string
                  runStatus:
                    type: string
                  runId:
                    type: string
                  environment:
                    type: string
        scheduling:
          type: array
          items:
            type: object
            properties:
              environment:
                type: string
              frequency:
                type: number
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
            scripts:
              $ref: '#/components/schemas/Link'
            AllVersionOfTheScript:
              $ref: '#/components/schemas/Link'

    ScriptCreationDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        version:
          $ref: '#/components/schemas/ScriptVersionDto'
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ScriptParameterDto'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/ActionDto'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/ScriptLabelDto'

    ScriptLabelDto:
      type: object
      properties:
        name:
          type: string
        value:
          type: string

    ScriptParameterDto:
      type: object
      properties:
        name:
          type: string
        value:
          type: string

    ScriptVersionDto:
      type: object
      properties:
        number:
          type: integer
          format: int64
        description:
          type: string

    PagedModelScriptDto:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            scripts:
              type: array
              items:
                $ref: '#/components/schemas/ScriptDto'
        _links:
          $ref: '#/components/schemas/PageLinks'
        page:
          $ref: '#/components/schemas/PaginationProperties'

    PagedModelExecutionRequestDto:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            execution_requests:
              type: array
              items:
                $ref: '#/components/schemas/ExecutionRequestDto'
        _links:
          $ref: '#/components/schemas/PageLinks'
        page:
          $ref: '#/components/schemas/PaginationProperties'

    PagedModelScriptResultDto:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            scriptResults:
              type: array
              items:
                $ref: '#/components/schemas/ScriptResultDto'
        _links:
          $ref: '#/components/schemas/PageLinks'
        page:
          $ref: '#/components/schemas/PaginationProperties'

    PagedModelScriptExecutionDto:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            scriptExecutions:
              type: array
              items:
                $ref: '#/components/schemas/ScriptExecutionDto'
        _links:
          $ref: '#/components/schemas/PageLinks'
        page:
          $ref: '#/components/schemas/PaginationProperties'


    PaginationProperties:
      type: object
      properties:
        size:
          type: integer
          description: Number of element displayed on the page
        totalElements:
          type: integer
          description: Number of element Avalaible in the API through this endpoint
        totalPages:
          type: integer
          description: Number of page with the parameter size and totalElements
        number:
          type: integer
          description: Actual Number of the page (starts from 1 to n)

    PageLinks:
      type: object
      properties:
        first:
          $ref: '#/components/schemas/Link'
        prev:
          $ref: '#/components/schemas/Link'
        self:
          $ref: '#/components/schemas/Link'
        next:
          $ref: '#/components/schemas/Link'
        last:
          $ref: '#/components/schemas/Link'

    HalMultipleEmbeddedResourceScriptCreationDto:
      type: object
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/ScriptCreationDto'

    ScriptExecutionDto:
      type: object
      properties:
        runId:
          type: string
        processId:
          type: string
        parentProcessId:
          type: number
        scriptId:
          type: string
        scriptName:
          type: string
        scriptVersion:
          type: number
        environment:
          type: string
        status:
          type: string
          enum:
            - RUNNING
            - SUCCESS
            - WARNING
            - ERROR
            - STOPPED
            - SKIPPED
        startTimestamp:
          type: string
          format: date-time
        endTimestamp:
          type: string
          format: date-time
        inputParameters:
          type: array
          items:
            $ref: '#/components/schemas/InputParameter'
        designLabels:
          type: array
          items:
            $ref: '#/components/schemas/NameValue'
        executionLabels:
          type: array
          items:
            $ref: '#/components/schemas/NameValue'
        output:
          type: array
          items:
            $ref: '#/components/schemas/NameValue'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/ActionResult'
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'

    InputParameter:
      type: object
      properties:
        name:
          type: string
        rawValue:
          type: string
        resolvedValue:
          type: string

    ActionResult:
      type: object
      properties:
        runId:
          type: string
        processId:
          type: number
        type:
          type: string
        name:
          type: string
        description:
          type: string
        condition:
          type: string
        errorStop:
          type: boolean
        errorExpected:
          type: boolean
        status:
          type: string
        startTimestamp:
          type: string
          format: date-time
        endTimestamp:
          type: string
          format: date-time
        inputParameters:
          type: array
          items:
            $ref: '#/components/schemas/InputParameter'
        output:
          type: array
          items:
            $ref: '#/components/schemas/NameValue'

    NameValue:
      type: object
      properties:
        name:
          type: string
        value:
          type: string

    ScriptResultDto:
      type: object
      properties:
        runID:
          type: string
        processId:
          type: number
        parentProcessId:
          type: number
        scriptId:
          type: string
        scriptName:
          type: string
        scriptVersion:
          type: number
        environment:
          type: string
        status:
          type: string
          enum:
            - RUNNING
            - SUCCESS
            - WARNING
            - ERROR
            - STOPPED
            - SKIPPED
        startTimestamp:
          type: string
          format: date-time
        endTimestamp:
          type: string
          format: date-time
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
            scriptResults:
              $ref: '#/components/schemas/Link'
            scriptResultsOfThisRunId:
              $ref: '#/components/schemas/Link'

    ScriptGetDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        version:
          $ref: '#/components/schemas/ScriptVersionDto'
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ScriptParameterDto'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/ActionDto'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/ScriptLabelDto'
        execution:
          type: object
          properties:
            total:
              type: number
            mostRecent:
              type: array
              items:
                type: object
                properties:
                  startTimestamp:
                    type: string
                  endTimestamp:
                    type: string
                  runStatus:
                    type: string
                  runId:
                    type: string
                  environment:
                    type: string
        scheduling:
          type: array
          items:
            type: object
            properties:
              environment:
                type: string
              frequency:
                type: number
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    HalMultipleEmbeddedResourceScriptGlobalDto:
      type: object
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/ScriptGetDto'
    UserLoginDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    UserAuthenticationDto:
      type: object
      properties:
        accessToken:
          type: string
        expiresIn:
          type: number



  securitySchemes:
    basicScheme:
      type: http
      scheme: basic

